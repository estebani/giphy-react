{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputText","setinputText","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","setCategories","idx","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAAiB,EAERC,mBAAS,IAFD,mBAEnCC,EAFmC,KAExBC,EAFwB,KAiB1C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAUK,OAAOC,OAAS,IACzBR,GAAY,SAACS,GAAD,OAASP,GAAT,mBAAuBO,OACnCN,EAAa,MAMjB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAACP,GACvBF,EAAaE,EAAEQ,OAAOF,a,+BCNjBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,yFAC2EC,UAAUH,GADrF,sBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAKA,QCHJO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAJ0B,mBAE/BC,EAF+B,KAExBC,EAFwB,KAmBtC,OAZAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLf,KAAKkB,EACLL,SAAQ,MAEb,UAEZ,CAACpB,IAEGqB,EDfsBM,CAAa3B,GAA9ByB,EAHuB,EAG5BlB,KAAWa,EAHiB,EAGjBA,QAGlB,OACI,qCACI,6BAAKpB,IACJoB,GAAW,mBAAGJ,UAAU,wCAAb,qBACZ,qBAAKA,UAAU,mDAAf,SAEYS,EAAKhB,KAAI,SAAAC,GACT,OACI,cAAC,EAAD,eAESA,GADAA,EAAIC,aEf5BiB,EAAe,WAAK,IAAD,EAGQ1C,mBAAS,CAAC,cAHlB,mBAGrB2C,EAHqB,KAGTC,EAHS,KAK5B,OACI,qCACI,8CACA,uBAEA,cAAC,EAAD,CAAa7C,YAAa6C,IAE1B,6BAEQD,EAAWpB,KAAI,SAACT,EAAS+B,GAAV,OACX,cAAC,EAAD,CAEI/B,SAAUA,GADLA,Y,MCdjCgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c3ae0a75.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategory}) => {\r\n\r\n    const [inputText, setinputText] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputText(e.target.value)\r\n    };\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(inputText.trim().length > 2){\r\n            setCategory((cats)=>[inputText, ...cats])\r\n            setinputText('')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputText }\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategory: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n    const url = `http://api.giphy.com/v1/gifs/search?api_key=NolozR01LRLiOPqHlCWHaTHYLPeL6NFs&q=${encodeURI(category)}&limit=10`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    //console.log(gifs)\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([])\r\n    const {data:imgs, loading} = useFetchGifs(category);\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p className=\"card animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"card-grid card animate__animated animate__fadeIn\">\r\n                    {\r\n                        imgs.map(img=>{\r\n                        return (\r\n                            <GifGridItem \r\n                                key={img.id}\r\n                                { ...img }\r\n                            />\r\n                        )\r\n                    })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data:imgs,\r\n                        loading:false\r\n                    })\r\n                }, 1000);\r\n            })\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = ()=>{\r\n    \r\n    \r\n    const [categories, setCategories] = useState(['One Punch'])\r\n    \r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr />\r\n\r\n            <AddCategory setCategory={setCategories}/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map((category,idx)=> (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category}/>\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css'\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}